do
    local zset     = require("lzset")
    local max_rank = 3
    local rank     = zset.new(max_rank)
    rank:update(40, 11, 4)
    rank:update(30, 22, 3)
    rank:update(20, 33, 2)
    rank:update(10, 44, 1)
    assert(rank:rank(10) == 1)
    assert(rank:rank(20) == 2)
    assert(rank:rank(30) == 3)
    assert(rank:rank(40) == nil)
    assert(rank:size() == 3)
    local rsize = rank:size()
    for i = 1, rsize do
        logger.debug("rank:{},{},{}", i, rank:rank(i*10))
        logger.debug("key:{},score:{}",rank:key_by_rank(i))
    end

    local res = rank:range(1, 4)
    assert(#res == 3)
    local top4 = rank:range(1, 4)
    logger.warn("top4:{}", top4)
    local r, score, t = rank:rank(2)
    logger.debug("2 rank:{},score:{},t:{}", r, score, t)
    rank:clear()
    assert(not rank:range(1, 4))
    logger.debug("zset test finish")

    logger.debug("-------------------")
    local rank     = zset.new(max_rank,true)
    rank:update(40, 11, 4)
    rank:update(30, 22, 3)
    rank:update(20, 33, 2)
    rank:update(10, 44, 1)
    assert(rank:rank(40) == 1)
    assert(rank:rank(30) == 2)
    assert(rank:rank(20) == 3)
    assert(rank:rank(10) == nil)
    assert(rank:size() == 3)
    local rsize = rank:size()
    for i = 1, rsize do
        --logger.debug("rank:{},{},{}", i, rank:rank(10+i*10))
        logger.debug("key:{},score:{}",rank:key_by_rank(i))
    end

    local res = rank:range(1, 4)
    assert(#res == 3)
    local top4 = rank:range(1, 4)
    logger.warn("top4:{}", top4)
    local r, score, t = rank:rank(2)
    logger.debug("2 rank:{},score:{},t:{}", r, score, t)
    rank:clear()
    assert(not rank:range(1, 4))
    logger.debug("zset test finish")
end